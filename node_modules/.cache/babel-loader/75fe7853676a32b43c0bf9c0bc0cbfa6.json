{"ast":null,"code":"var _jsxFileName = \"/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/CommentForm.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport PostingList from \"./PostingList.js\";\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault(); //make the api call to the authentication page\n\n      fetch(\"http://stark.cse.buffalo.edu/hci/postcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditPosts\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          posttext: this.state.post_text,\n          parentid: this.props.parent\n        })\n      }).then(res => res.json()).then(result => {\n        // update the count in the UI manually, to avoid a database hit\n        this.props.onAddComment(this.props.commentCount + 1);\n        this.postListing.current.loadPosts();\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        post_text: event.target.value\n      });\n    };\n\n    this.state = {\n      post_text: \"\",\n      postmessage: \"\"\n    };\n    this.postListing = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Add A Comment to Post \", this.props.parent, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: \"70\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), this.state.postmessage), React.createElement(PostingList, {\n      ref: this.postListing,\n      parentid: this.props.parent,\n      type: \"commentlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/CommentForm.js"],"names":["React","PostingList","CommentForm","Component","constructor","props","submitHandler","event","preventDefault","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","posttext","state","post_text","parentid","parent","then","res","json","result","onAddComment","commentCount","postListing","current","loadPosts","error","alert","myChangeHandler","setState","target","value","postmessage","createRef","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,aATmB,GASHC,KAAK,IAAI;AACvB;AACAA,MAAAA,KAAK,CAACC,cAAN,GAFuB,CAIvB;;AACAC,MAAAA,KAAK,CAAC,qDAAD,EAAwD;AAC3DC,QAAAA,MAAM,EAAE,MADmD;AAE3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,gBADW;AAEnBC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFU;AAGnBC,UAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHI;AAInBE,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,SAJF;AAKnBC,UAAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWkB;AALF,SAAf;AAFqD,OAAxD,CAAL,CAUGC,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWGF,IAXH,CAYIG,MAAM,IAAI;AACR;AACA,aAAKtB,KAAL,CAAWuB,YAAX,CAAwB,KAAKvB,KAAL,CAAWwB,YAAX,GAA0B,CAAlD;AACA,aAAKC,WAAL,CAAiBC,OAAjB,CAAyBC,SAAzB;AACD,OAhBL,EAiBIC,KAAK,IAAI;AACPC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD,OAnBL;AAqBD,KAnCkB;;AAAA,SAqCnBC,eArCmB,GAqCD5B,KAAK,IAAI;AACzB,WAAK6B,QAAL,CAAc;AACZf,QAAAA,SAAS,EAAEd,KAAK,CAAC8B,MAAN,CAAaC;AADZ,OAAd;AAGD,KAzCkB;;AAEjB,SAAKlB,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXkB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKT,WAAL,GAAmB9B,KAAK,CAACwC,SAAN,EAAnB;AACD;;AAoCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKnC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACyB,KAAKD,KAAL,CAAWkB,MADpC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAU,MAAA,IAAI,EAAC,IAAf;AAAoB,MAAA,IAAI,EAAC,IAAzB;AAA8B,MAAA,QAAQ,EAAE,KAAKY,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUG,KAAKf,KAAL,CAAWmB,WAVd,CADF,EAaE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAE,KAAKT,WADZ;AAEE,MAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWkB,MAFvB;AAGE,MAAA,IAAI,EAAC,aAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAqBD;;AAlEsD","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport PostingList from \"./PostingList.js\";\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post_text: \"\",\n      postmessage: \"\"\n    };\n    this.postListing = React.createRef();\n  }\n\n  submitHandler = event => {\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/hci/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditPosts\",\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        posttext: this.state.post_text,\n        parentid: this.props.parent\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          // update the count in the UI manually, to avoid a database hit\n          this.props.onAddComment(this.props.commentCount + 1);\n          this.postListing.current.loadPosts();\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  myChangeHandler = event => {\n    this.setState({\n      post_text: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.submitHandler}>\n          <label>\n            Add A Comment to Post {this.props.parent}\n            <br />\n            <textarea rows=\"10\" cols=\"70\" onChange={this.myChangeHandler} />\n          </label>\n          <br />\n\n          <input type=\"submit\" value=\"submit\" />\n          <br />\n          {this.state.postmessage}\n        </form>\n        <PostingList\n          ref={this.postListing}\n          parentid={this.props.parent}\n          type=\"commentlist\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}