{"ast":null,"code":"var _jsxFileName = \"/home/sadequs/Code/black-hole-industries/src/Component/Profile.js\";\nimport React from \"react\";\nimport \"../App.css\";\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault(); //make the api call to the user controller\n\n      fetch(\"http://stark.cse.buffalo.edu/hci/usercontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditUsers\",\n          username: this.state.username,\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          mode: \"ignorenull\"\n        })\n      }).then(res => res.json()).then(result => {\n        this.setState({\n          responseMessage: result.Status\n        });\n      }, error => {\n        alert(\"error!\");\n      }); //make the api call to the user prefs controller\n\n      fetch(\"http://stark.cse.buffalo.edu/hci/upcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditUserPrefs\",\n          prefname: \"FavoriteColor\",\n          prefvalue: this.state.favoritecolor.pref_value,\n          prefid: this.state.favoritecolor.pref_id,\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\")\n        })\n      }).then(res => res.json()).then(result => {\n        this.setState({\n          responseMessage: result.Status\n        });\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      favoritecolor: \"\",\n      responseMessage: \"\"\n    };\n    this.fieldChangeHandler.bind(this);\n  }\n\n  fieldChangeHandler(field, e) {\n    console.log(\"field change\");\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  prefChangeHandler(field, e) {\n    console.log(\"pref field change \" + field);\n    console.log(this.state.favoirtecolor);\n    const prefs1 = JSON.parse(JSON.stringify(this.state.favoritecolor));\n    console.log(prefs1);\n    prefs1.pref_value = e.target.value;\n    console.log(prefs1);\n    this.setState({\n      [field]: prefs1\n    });\n  }\n\n  componentDidMount() {\n    //make the api call to the user API to get the user with all of their attached preferences\n    fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getCompleteUsers\",\n        userid: this.props.userid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.users) {\n        console.log(result.users);\n        let favoritecolor = \"\"; // read the user preferences and convert to an associative array for reference\n\n        result.users[0][\"user_prefs\"].forEach(function (pref) {\n          if (pref.pref_name === \"FavoriteColor\") {\n            favoritecolor = pref;\n          }\n        });\n        console.log(favoritecolor);\n        this.setState({\n          // IMPORTANT!  You need to guard against any of these values being null.  If they are, it will\n          // try and make the form component uncontrolled, which plays havoc with react\n          username: result.users[0].username || \"\",\n          firstname: result.users[0].first_name || \"\",\n          lastname: result.users[0].last_name || \"\",\n          favoritecolor: favoritecolor\n        });\n      }\n    }, error => {\n      alert(\"error!\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"profileform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Username\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.fieldChangeHandler(\"username\", e),\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"First Name\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.fieldChangeHandler(\"firstname\", e),\n      value: this.state.firstname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Last Name\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.fieldChangeHandler(\"lastname\", e),\n      value: this.state.lastname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Favorite Color\", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.prefChangeHandler(\"favoritecolor\", e),\n      value: this.state.favoritecolor ? this.state.favoritecolor.pref_value : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Username is : \", this.state.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Firstname is : \", this.state.firstname), this.state.responseMessage);\n  }\n\n}","map":{"version":3,"sources":["/home/sadequs/Code/black-hole-industries/src/Component/Profile.js"],"names":["React","Profile","Component","constructor","props","submitHandler","event","preventDefault","fetch","method","body","JSON","stringify","action","username","state","firstname","lastname","user_id","sessionStorage","getItem","session_token","mode","then","res","json","result","setState","responseMessage","Status","error","alert","prefname","prefvalue","favoritecolor","pref_value","prefid","pref_id","fieldChangeHandler","bind","field","e","console","log","target","value","prefChangeHandler","favoirtecolor","prefs1","parse","componentDidMount","userid","users","forEach","pref","pref_name","first_name","last_name","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      favoritecolor: \"\",\n      responseMessage: \"\"\n    };\n    this.fieldChangeHandler.bind(this);\n  }\n\n  fieldChangeHandler(field, e) {\n    console.log(\"field change\");\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  prefChangeHandler(field, e) {\n    console.log(\"pref field change \" + field);\n    console.log(this.state.favoirtecolor);\n    const prefs1 = JSON.parse(JSON.stringify(this.state.favoritecolor));\n    console.log(prefs1);\n    prefs1.pref_value = e.target.value;\n    console.log(prefs1);\n\n    this.setState({\n      [field]: prefs1\n    });\n  }\n\n  componentDidMount() {\n    //make the api call to the user API to get the user with all of their attached preferences\n    fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getCompleteUsers\",\n        userid: this.props.userid\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          if (result.users) {\n            console.log(result.users);\n            let favoritecolor = \"\";\n\n            // read the user preferences and convert to an associative array for reference\n\n            result.users[0][\"user_prefs\"].forEach(function(pref) {\n              if (pref.pref_name === \"FavoriteColor\") {\n                favoritecolor = pref;\n              }\n            });\n\n            console.log(favoritecolor);\n\n            this.setState({\n              // IMPORTANT!  You need to guard against any of these values being null.  If they are, it will\n              // try and make the form component uncontrolled, which plays havoc with react\n              username: result.users[0].username || \"\",\n              firstname: result.users[0].first_name || \"\",\n              lastname: result.users[0].last_name || \"\",\n              favoritecolor: favoritecolor\n            });\n          }\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n  }\n\n  submitHandler = event => {\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    //make the api call to the user controller\n    fetch(\"http://stark.cse.buffalo.edu/hci/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUsers\",\n        username: this.state.username,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        mode: \"ignorenull\"\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            responseMessage: result.Status\n          });\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n\n    //make the api call to the user prefs controller\n    fetch(\"http://stark.cse.buffalo.edu/hci/upcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditUserPrefs\",\n        prefname: \"FavoriteColor\",\n        prefvalue: this.state.favoritecolor.pref_value,\n        prefid: this.state.favoritecolor.pref_id,\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\")\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            responseMessage: result.Status\n          });\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.submitHandler} className=\"profileform\">\n        <label>\n          Username\n          <input\n            type=\"text\"\n            onChange={e => this.fieldChangeHandler(\"username\", e)}\n            value={this.state.username}\n          />\n        </label>\n        <label>\n          First Name\n          <input\n            type=\"text\"\n            onChange={e => this.fieldChangeHandler(\"firstname\", e)}\n            value={this.state.firstname}\n          />\n        </label>\n        <label>\n          Last Name\n          <input\n            type=\"text\"\n            onChange={e => this.fieldChangeHandler(\"lastname\", e)}\n            value={this.state.lastname}\n          />\n        </label>\n        <label>\n          Favorite Color\n          <input\n            type=\"text\"\n            onChange={e => this.prefChangeHandler(\"favoritecolor\", e)}\n            value={\n              this.state.favoritecolor\n                ? this.state.favoritecolor.pref_value\n                : \"\"\n            }\n          />\n        </label>\n        <input type=\"submit\" value=\"submit\" />\n        <p>Username is : {this.state.username}</p>\n        <p>Firstname is : {this.state.firstname}</p>\n        {this.state.responseMessage}\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}