{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\sprint-4\\\\src\\\\Component\\\\Homepage\\\\PostPreview.js\";\nimport React from \"react\";\nimport \"./Homepage.css\";\nimport { Link } from \"react-router-dom\";\n\nclass PostPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.likePost = event => {\n      event.preventDefault();\n      fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditPostTags\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          userid: sessionStorage.getItem(\"user\"),\n          tag: \"test2\",\n          postid: this.props.post.post_id\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.Status) {\n          this.loadLikes();\n          this.setState({\n            isLoaded: true,\n            userLiked: true\n          });\n        }\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.disLikePost = event => {\n      event.preventDefault();\n      console.log(\"REACHED\");\n      fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"deletePostTags\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          userid: sessionStorage.getItem(\"user\"),\n          posttagid: this.state.likeId\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.Status) {\n          this.loadLikes();\n          this.setState({\n            isLoaded: true,\n            userLiked: false\n          });\n        }\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      userLiked: false,\n      likeId: \"\",\n      displayedLike: \"https://i7.uihere.com/icons/998/832/946/upvote-9fbfa83dcbcc4553543fbbcee0c4e206.png\",\n      likes: []\n    };\n    this.loadLikes();\n  }\n\n  userLikes() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPostTags\",\n        postid: this.props.post.post_id,\n        tag: \"test2\",\n        userid: sessionStorage.getItem(\"user\")\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.post_tags) {\n        console.log(result.post_tags);\n        this.setState({\n          userLiked: true,\n          likeId: result.post_tags[0].post_tag_id\n        });\n      } else {\n        console.log(\"REACHED\");\n        this.setState({\n          userLiked: false\n        });\n      }\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  loadLikes() {\n    console.log(\"ID\" + this.props.post.post_id);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPostTags\",\n        postid: this.props.post.post_id,\n        tag: \"test2\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.post_tags) {\n        this.setState({\n          isLoaded: true,\n          likes: result.post_tags\n        });\n      }\n\n      this.userLikes();\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  whichLike() {\n    if (this.state.userLiked) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        className: \"like\",\n        src: \"https://i7.uihere.com/icons/237/974/400/upvote-7ccac87c950ed5a8ce2f412f29940d33.png\",\n        onClick: this.disLikePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        className: \"like\",\n        src: \"https://i7.uihere.com/icons/998/832/946/upvote-9fbfa83dcbcc4553543fbbcee0c4e206.png\",\n        onClick: this.likePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-preview-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, this.props.post.post_text, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"post-preview-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, this.state.likes.length), this.whichLike());\n  }\n\n}\n\nexport default PostPreview; // to={{\n//     pathname: '/PostPage',\n//         aboutProps: {\n//         post: this.props.post\n//     }\n// }}","map":{"version":3,"sources":["D:/School/sprint-4/src/Component/Homepage/PostPreview.js"],"names":["React","Link","PostPreview","Component","constructor","props","likePost","event","preventDefault","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","userid","tag","postid","post","post_id","then","res","json","result","Status","loadLikes","setState","isLoaded","userLiked","error","disLikePost","console","log","posttagid","state","likeId","displayedLike","likes","userLikes","post_tags","post_tag_id","whichLike","render","post_text","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Homepage.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass PostPreview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userLiked: false,\r\n            likeId: \"\",\r\n            displayedLike: \"https://i7.uihere.com/icons/998/832/946/upvote-9fbfa83dcbcc4553543fbbcee0c4e206.png\",\r\n            likes: []\r\n        };\r\n        this.loadLikes();\r\n    }\r\n\r\n    userLikes() {\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"getPostTags\",\r\n                postid: this.props.post.post_id,\r\n                tag: \"test2\",\r\n                userid: sessionStorage.getItem(\"user\")\r\n\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    if (result.post_tags) {\r\n                        console.log(result.post_tags)\r\n                        this.setState({\r\n                            userLiked: true,\r\n                            likeId: result.post_tags[0].post_tag_id\r\n                        });\r\n                    } else {\r\n                        console.log(\"REACHED\")\r\n                        this.setState({\r\n                            userLiked: false\r\n                        })\r\n                    }\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n    loadLikes() {\r\n        console.log(\"ID\" + this.props.post.post_id);\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"getPostTags\",\r\n                postid: this.props.post.post_id,\r\n                tag: \"test2\"\r\n\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    if (result.post_tags) {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            likes: result.post_tags\r\n                        });\r\n                    }\r\n                    this.userLikes();\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n    likePost = event => {\r\n        event.preventDefault();\r\n            fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\r\n                method: \"post\",\r\n                body: JSON.stringify({\r\n                    action: \"addOrEditPostTags\",\r\n                    user_id: sessionStorage.getItem(\"user\"),\r\n                    session_token: sessionStorage.getItem(\"token\"),\r\n                    userid: sessionStorage.getItem(\"user\"),\r\n                    tag: \"test2\",\r\n                    postid: this.props.post.post_id\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    result => {\r\n                        if (result.Status) {\r\n                            this.loadLikes();\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                userLiked: true\r\n                            });\r\n                        }\r\n                    },\r\n                    error => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                        });\r\n                    }\r\n                );\r\n\r\n    };\r\n\r\n    disLikePost = event => {\r\n        event.preventDefault();\r\n        console.log(\"REACHED\");\r\n            fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\r\n                method: \"post\",\r\n                body: JSON.stringify({\r\n                    action: \"deletePostTags\",\r\n                    user_id: sessionStorage.getItem(\"user\"),\r\n                    session_token: sessionStorage.getItem(\"token\"),\r\n                    userid: sessionStorage.getItem(\"user\"),\r\n                    posttagid: this.state.likeId\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    result => {\r\n                        if (result.Status) {\r\n                            this.loadLikes();\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                userLiked: false\r\n                            });\r\n                        }\r\n                    },\r\n                    error => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                        });\r\n                    }\r\n                );\r\n    };\r\n\r\n\r\n    whichLike() {\r\n\r\n        if (this.state.userLiked) {\r\n            return (\r\n                <img className=\"like\"\r\n                     src=\"https://i7.uihere.com/icons/237/974/400/upvote-7ccac87c950ed5a8ce2f412f29940d33.png\"\r\n                     onClick={this.disLikePost}/>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <img className=\"like\"\r\n                     src=\"https://i7.uihere.com/icons/998/832/946/upvote-9fbfa83dcbcc4553543fbbcee0c4e206.png\"\r\n                     onClick={this.likePost}/>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"post-preview-main\">\r\n\r\n\r\n                {this.props.post.post_text}\r\n                <p className=\"post-preview-text\">{this.state.likes.length}</p>\r\n                {this.whichLike()}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostPreview;\r\n\r\n\r\n// to={{\r\n//     pathname: '/PostPage',\r\n//         aboutProps: {\r\n//         post: this.props.post\r\n//     }\r\n// }}"]},"metadata":{},"sourceType":"module"}