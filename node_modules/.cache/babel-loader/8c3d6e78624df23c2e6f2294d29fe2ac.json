{"ast":null,"code":"var _jsxFileName = \"/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/FriendForm.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport Autocomplete from \"./Autocomplete.js\";\nexport default class FriendForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault(); //make the api call to the user controller\n\n      fetch(\"http://stark.cse.buffalo.edu/hci/connectioncontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditConnections\",\n          connectuserid: this.state.friendid,\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\")\n        })\n      }).then(res => res.json()).then(result => {\n        this.setState({\n          responseMessage: result.Status\n        });\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.state = {\n      friendname: \"\",\n      friendid: \"\",\n      responseMessage: \"\",\n      users: []\n    };\n    this.fieldChangeHandler.bind(this);\n  }\n\n  fieldChangeHandler(field, e) {\n    console.log(\"field change\");\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    //make the api call to the user API to get the user with all of their attached preferences\n    fetch(\"http://stark.cse.buffalo.edu/hci/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUsers\"\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.users) {\n        let names = [];\n        result.users.forEach(element => names.push(element.name));\n        this.setState({\n          users: names,\n          responseMessage: result.Status\n        });\n        console.log(names);\n      }\n    }, error => {\n      alert(\"error!\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"profileform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Find a Friend!\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"autocomplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.state.responseMessage);\n  }\n\n}","map":{"version":3,"sources":["/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/FriendForm.js"],"names":["React","Autocomplete","FriendForm","Component","constructor","props","submitHandler","event","preventDefault","fetch","method","body","JSON","stringify","action","connectuserid","state","friendid","user_id","sessionStorage","getItem","session_token","then","res","json","result","setState","responseMessage","Status","error","alert","friendname","users","fieldChangeHandler","bind","field","e","console","log","target","value","componentDidMount","names","forEach","element","push","name","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport Autocomplete from \"./Autocomplete.js\";\n\nexport default class FriendForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friendname: \"\",\n      friendid: \"\",\n      responseMessage: \"\",\n      users: []\n    };\n    this.fieldChangeHandler.bind(this);\n  }\n\n  fieldChangeHandler(field, e) {\n    console.log(\"field change\");\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    //make the api call to the user API to get the user with all of their attached preferences\n    fetch(\"http://stark.cse.buffalo.edu/hci/usercontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getUsers\"\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          if (result.users) {\n            let names = [];\n            result.users.forEach(element => names.push(element.name));\n\n            this.setState({\n              users: names,\n              responseMessage: result.Status\n            });\n            console.log(names);\n          }\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n  }\n\n  submitHandler = event => {\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    //make the api call to the user controller\n    fetch(\"http://stark.cse.buffalo.edu/hci/connectioncontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"addOrEditConnections\",\n        connectuserid: this.state.friendid,\n        user_id: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\")\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            responseMessage: result.Status\n          });\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.submitHandler} className=\"profileform\">\n        <label>\n          Find a Friend!\n          <br />\n          <div className=\"autocomplete\">\n            <Autocomplete suggestions={this.state.users} />\n          </div>\n        </label>\n\n        <input type=\"submit\" value=\"submit\" />\n\n        {this.state.responseMessage}\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}