{"ast":null,"code":"var _jsxFileName = \"/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/LoginForm.js\";\nimport React from \"react\";\nimport \"../App.css\";\nexport default class LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.passwordChangeHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault(); //make the api call to the authentication page\n\n      fetch(\"http://stark.cse.buffalo.edu/hci/SocialAuth.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"login\",\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(result => {\n        console.log(\"Testing\");\n\n        if (result.user) {\n          sessionStorage.setItem(\"token\", result.user.session_token);\n          sessionStorage.setItem(\"user\", result.user.user_id);\n          this.setState({\n            sessiontoken: result.user.session_token,\n            alanmessage: result.user.session_token\n          });\n        } else {\n          sessionStorage.removeItem(\"token\");\n          sessionStorage.removeItem(\"user\");\n          this.setState({\n            sessiontoken: \"\",\n            alanmessage: result.message\n          });\n        }\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      alanmessage: \"\",\n      sessiontoken: \"\"\n    };\n  }\n\n  render() {\n    console.log(\"Rendering login, token is \" + sessionStorage.getItem(\"token\"));\n\n    if (!sessionStorage.getItem(\"token\")) {\n      return React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Username\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.myChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Password\", React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.passwordChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.alanmessage));\n    } else {\n      console.log(\"Returning welcome message\");\n\n      if (this.state.username) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Welcome, \", this.state.username);\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, this.state.alanmessage);\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/LoginForm.js"],"names":["React","LoginForm","Component","constructor","props","myChangeHandler","event","setState","username","target","value","passwordChangeHandler","password","submitHandler","preventDefault","fetch","method","body","JSON","stringify","action","state","then","res","json","result","console","log","user","sessionStorage","setItem","session_token","user_id","sessiontoken","alanmessage","removeItem","message","error","alert","render","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,eAVmB,GAUDC,KAAK,IAAI;AACzB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADX,OAAd;AAGD,KAdkB;;AAAA,SAgBnBC,qBAhBmB,GAgBKL,KAAK,IAAI;AAC/B,WAAKC,QAAL,CAAc;AACZK,QAAAA,QAAQ,EAAEN,KAAK,CAACG,MAAN,CAAaC;AADX,OAAd;AAGD,KApBkB;;AAAA,SAsBnBG,aAtBmB,GAsBHP,KAAK,IAAI;AACvB;AACAA,MAAAA,KAAK,CAACQ,cAAN,GAFuB,CAIvB;;AACAC,MAAAA,KAAK,CAAC,iDAAD,EAAoD;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE,OADW;AAEnBZ,UAAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWb,QAFF;AAGnBI,UAAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWT;AAHF,SAAf;AAFiD,OAApD,CAAL,CAQGU,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EASGF,IATH,CAUIG,MAAM,IAAI;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,YAAIF,MAAM,CAACG,IAAX,EAAiB;AACfC,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCL,MAAM,CAACG,IAAP,CAAYG,aAA5C;AACAF,UAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BL,MAAM,CAACG,IAAP,CAAYI,OAA3C;AAEA,eAAKzB,QAAL,CAAc;AACZ0B,YAAAA,YAAY,EAAER,MAAM,CAACG,IAAP,CAAYG,aADd;AAEZG,YAAAA,WAAW,EAAET,MAAM,CAACG,IAAP,CAAYG;AAFb,WAAd;AAID,SARD,MAQO;AACLF,UAAAA,cAAc,CAACM,UAAf,CAA0B,OAA1B;AACAN,UAAAA,cAAc,CAACM,UAAf,CAA0B,MAA1B;AACA,eAAK5B,QAAL,CAAc;AACZ0B,YAAAA,YAAY,EAAE,EADF;AAEZC,YAAAA,WAAW,EAAET,MAAM,CAACW;AAFR,WAAd;AAID;AACF,OA5BL,EA6BIC,KAAK,IAAI;AACPC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD,OA/BL;AAiCD,KA5DkB;;AAEjB,SAAKjB,KAAL,GAAa;AACXb,MAAAA,QAAQ,EAAE,EADC;AAEXI,MAAAA,QAAQ,EAAE,EAFC;AAGXsB,MAAAA,WAAW,EAAE,EAHF;AAIXD,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAsDDM,EAAAA,MAAM,GAAG;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BE,cAAc,CAACW,OAAf,CAAuB,OAAvB,CAA3C;;AACA,QAAI,CAACX,cAAc,CAACW,OAAf,CAAuB,OAAvB,CAAL,EAAsC;AACpC,aACE;AAAM,QAAA,QAAQ,EAAE,KAAK3B,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKR,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAE,KAAKM,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CANF,EAUE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKU,KAAL,CAAWa,WAAf,CAXF,CADF;AAeD,KAhBD,MAgBO;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,UAAI,KAAKN,KAAL,CAAWb,QAAf,EAAyB;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAa,KAAKa,KAAL,CAAWb,QAAxB,CAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKa,KAAL,CAAWa,WAAf,CAAP;AACD;AACF;AACF;;AAzFoD","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nexport default class LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      alanmessage: \"\",\n      sessiontoken: \"\"\n    };\n  }\n\n  myChangeHandler = event => {\n    this.setState({\n      username: event.target.value\n    });\n  };\n\n  passwordChangeHandler = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n\n  submitHandler = event => {\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    //make the api call to the authentication page\n    fetch(\"http://stark.cse.buffalo.edu/hci/SocialAuth.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"login\",\n        username: this.state.username,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          console.log(\"Testing\");\n          if (result.user) {\n            sessionStorage.setItem(\"token\", result.user.session_token);\n            sessionStorage.setItem(\"user\", result.user.user_id);\n\n            this.setState({\n              sessiontoken: result.user.session_token,\n              alanmessage: result.user.session_token\n            });\n          } else {\n            sessionStorage.removeItem(\"token\");\n            sessionStorage.removeItem(\"user\");\n            this.setState({\n              sessiontoken: \"\",\n              alanmessage: result.message\n            });\n          }\n        },\n        error => {\n          alert(\"error!\");\n        }\n      );\n  };\n\n  render() {\n    console.log(\"Rendering login, token is \" + sessionStorage.getItem(\"token\"));\n    if (!sessionStorage.getItem(\"token\")) {\n      return (\n        <form onSubmit={this.submitHandler}>\n          <label>\n            Username\n            <input type=\"text\" onChange={this.myChangeHandler} />\n          </label>\n          <br />\n          <label>\n            Password\n            <input type=\"password\" onChange={this.passwordChangeHandler} />\n          </label>\n          <input type=\"submit\" value=\"submit\" />\n          <p>{this.state.alanmessage}</p>\n        </form>\n      );\n    } else {\n      console.log(\"Returning welcome message\");\n      if (this.state.username) {\n        return <p>Welcome, {this.state.username}</p>;\n      } else {\n        return <p>{this.state.alanmessage}</p>;\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}