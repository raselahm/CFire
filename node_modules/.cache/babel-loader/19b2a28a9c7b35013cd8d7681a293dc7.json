{"ast":null,"code":"var _jsxFileName = \"/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport PostForm from \"./Component/PostForm.js\";\nimport FriendList from \"./Component/FriendList.js\";\nimport LoginForm from \"./Component/LoginForm.js\";\nimport Profile from \"./Component/Profile.js\";\nimport FriendForm from \"./Component/FriendForm.js\";\nimport Modal from \"./Component/Modal.js\";\nimport Navbar from \"./Component/Navbar\";\n\nclass MainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      section: \"main\",\n      openModal: false\n    };\n  }\n\n  render() {\n    if (this.state.section === \"main\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Social Media Test Harness\"), React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(PostForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    } else if (this.state.section === \"friends\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Friends\"), React.createElement(FriendForm, {\n        userid: sessionStorage.getItem(\"user\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(FriendList, {\n        userid: sessionStorage.getItem(\"user\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    } else if (this.state.section === \"settings\") {\n      return React.createElement(\"div\", {\n        className: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(Profile, {\n        userid: sessionStorage.getItem(\"user\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Unidentified Section!\");\n    }\n  }\n\n}\n\nfunction setMenuOption(mode, maincontent, e) {\n  maincontent.current.setState({\n    section: mode\n  });\n}\n\nfunction toggleModal(app) {\n  app.setState({\n    openModal: !app.state.openModal\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openModal: false\n    };\n  }\n\n  render() {\n    let post = require(\"./post.svg\");\n\n    let friend = require(\"./friends.svg\");\n\n    let setting = require(\"./settings.svg\");\n\n    let help = require(\"./help.svg\");\n\n    let mainContent = React.createRef();\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"maincontent\",\n      id: \"mainContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MainContent, {\n      ref: mainContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      show: this.state.openModal,\n      onClose: e => toggleModal(this, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"This is a modal dialog!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/App.js"],"names":["React","PostForm","FriendList","LoginForm","Profile","FriendForm","Modal","Navbar","MainContent","Component","constructor","props","state","section","openModal","render","sessionStorage","getItem","setMenuOption","mode","maincontent","e","current","setState","toggleModal","app","App","post","require","friend","setting","help","mainContent","createRef"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport PostForm from \"./Component/PostForm.js\";\nimport FriendList from \"./Component/FriendList.js\";\nimport LoginForm from \"./Component/LoginForm.js\";\nimport Profile from \"./Component/Profile.js\";\nimport FriendForm from \"./Component/FriendForm.js\";\nimport Modal from \"./Component/Modal.js\";\nimport Navbar from \"./Component/Navbar\"\n\nclass MainContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      section: \"main\",\n      openModal: false\n    };\n  }\n\n  render() {\n    if (this.state.section === \"main\") {\n      return (\n        <div>\n          <p>Social Media Test Harness</p>\n          <LoginForm />\n          <PostForm />\n        </div>\n      );\n    } else if (this.state.section === \"friends\") {\n      return (\n        <div>\n          <p>Friends</p>\n          <FriendForm userid={sessionStorage.getItem(\"user\")} />\n          <FriendList userid={sessionStorage.getItem(\"user\")} />\n        </div>\n      );\n    } else if (this.state.section === \"settings\") {\n      return (\n        <div className=\"settings\">\n          <p>Settings</p>\n          <Profile userid={sessionStorage.getItem(\"user\")} />\n        </div>\n      );\n    } else {\n      return <p>Unidentified Section!</p>;\n    }\n  }\n}\n\nfunction setMenuOption(mode, maincontent, e) {\n  maincontent.current.setState({\n    section: mode\n  });\n}\n\nfunction toggleModal(app) {\n  app.setState({\n    openModal: !app.state.openModal\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openModal: false\n    };\n  }\n\n  render() {\n    let post = require(\"./post.svg\");\n    let friend = require(\"./friends.svg\");\n    let setting = require(\"./settings.svg\");\n    let help = require(\"./help.svg\");\n    let mainContent = React.createRef();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar/> \n          <div className=\"maincontent\" id=\"mainContent\">\n            <MainContent ref={mainContent} />\n          </div>\n        </header>\n        <Modal show={this.state.openModal} onClose={e => toggleModal(this, e)}>\n          This is a modal dialog!\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}