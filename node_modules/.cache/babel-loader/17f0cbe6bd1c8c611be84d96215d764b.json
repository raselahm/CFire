{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\sprint-4\\\\src\\\\Component\\\\Messages\\\\MessagePage.js\";\nimport React from \"react\";\nimport \"./MessagePage.css\";\nimport MessagePageFriend from \"./MessagePageFriend\";\nimport Message from \"./Message\";\nimport Navbar from \"../NavBar/Navbar\";\nexport default class MessagePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/messagecontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditMessages\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          recipientid: this.state.recipientid,\n          message: this.state.messageText,\n          userid: sessionStorage.getItem(\"user\")\n        })\n      }).then(res => res.json()).then(result => {\n        this.setState({//messageText: result.Status\n        });\n        this.loadMessages();\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.getConversations = event => {\n      fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/messagecontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"getConversations\",\n          userid: sessionStorage.getItem(\"user\")\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.recipient_ids) {\n          this.setState({\n            conversations: result.recipient_ids\n          });\n        }\n      }, error => {\n        alert(\"error!\");\n      });\n    };\n\n    this.myChangeHandler = event => {\n      this.setState({\n        messageText: event.target.value\n      });\n    };\n\n    this.getRecip = this.getRecip.bind(this);\n    this.state = {\n      isLoaded: false,\n      error: null,\n      userid: \"UserName\",\n      recipientid: \"\",\n      messageText: \"\",\n      messages: [],\n      conversations: []\n    };\n    this.loadMessages();\n    this.getConversations();\n  }\n\n  loadMessages() {\n    fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/messagecontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getMessages\",\n        userid: sessionStorage.getItem(\"user\"),\n        session_token: sessionStorage.getItem(\"token\"),\n        user_id: sessionStorage.getItem(\"user\"),\n        recipientid: this.state.recipientid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.messages) {\n        this.setState({\n          messages: result.messages\n        });\n      }\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  getRecip(evt) {\n    console.log(\"REACHED\" + evt);\n    this.setState({\n      recipientid: evt\n    });\n    this.loadMessages();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagePage-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagePage-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagePage-friends\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, this.state.conversations.map(conversation => /*#__PURE__*/React.createElement(MessagePageFriend, {\n      convo: conversation,\n      func: this.getRecip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagePage-messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagePagemessages-messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, this.state.messages.map(message => /*#__PURE__*/React.createElement(Message, {\n      text: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messagePageInput-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"messagePageInput-textArea\",\n      rows: \"4\",\n      cols: \"150\",\n      onChange: this.myChangeHandler,\n      defaultValue: \"Input your stuff here...........\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"messagePageInput-send\",\n      onClick: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, \"Send\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/School/sprint-4/src/Component/Messages/MessagePage.js"],"names":["React","MessagePageFriend","Message","Navbar","MessagePage","Component","constructor","props","submitHandler","event","preventDefault","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","recipientid","state","message","messageText","userid","then","res","json","result","setState","loadMessages","error","alert","getConversations","recipient_ids","conversations","myChangeHandler","target","value","getRecip","bind","isLoaded","messages","evt","console","log","render","map","conversation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4CnBC,aA5CmB,GA4CHC,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,KAAK,CAAC,yEAAD,EAA4E;AAC7EC,QAAAA,MAAM,EAAE,MADqE;AAE7EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,MAAM,EAAE,mBADS;AAEjBC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFQ;AAGjBC,UAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHE;AAIjBE,UAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAJP;AAKjBE,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,WALH;AAMjBC,UAAAA,MAAM,EAAEP,cAAc,CAACC,OAAf,CAAuB,MAAvB;AANS,SAAf;AAFuE,OAA5E,CAAL,CAWKO,IAXL,CAWUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXjB,EAYKF,IAZL,CAaQG,MAAM,IAAI;AACN,aAAKC,QAAL,CAAc,CACV;AADU,SAAd;AAGA,aAAKC,YAAL;AACH,OAlBT,EAmBQC,KAAK,IAAI;AACLC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACH,OArBT;AAuBH,KArEkB;;AAAA,SAuEnBC,gBAvEmB,GAuEAzB,KAAK,IAAI;AACxBE,MAAAA,KAAK,CAAC,yEAAD,EAA4E;AAC7EC,QAAAA,MAAM,EAAE,MADqE;AAE7EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,MAAM,EAAE,kBADS;AAEjBS,UAAAA,MAAM,EAAEP,cAAc,CAACC,OAAf,CAAuB,MAAvB;AAFS,SAAf;AAFuE,OAA5E,CAAL,CAOKO,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CASQG,MAAM,IAAI;AACN,YAAIA,MAAM,CAACM,aAAX,EAA0B;AACtB,eAAKL,QAAL,CAAc;AACVM,YAAAA,aAAa,EAAEP,MAAM,CAACM;AADZ,WAAd;AAGH;AACJ,OAfT,EAgBQH,KAAK,IAAI;AACLC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACH,OAlBT;AAoBH,KA5FkB;;AAAA,SAsGnBI,eAtGmB,GAsGD5B,KAAK,IAAI;AACvB,WAAKqB,QAAL,CAAc;AACVN,QAAAA,WAAW,EAAEf,KAAK,CAAC6B,MAAN,CAAaC;AADhB,OAAd;AAGH,KA1GkB;;AAEf,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKnB,KAAL,GAAa;AACToB,MAAAA,QAAQ,EAAE,KADD;AAETV,MAAAA,KAAK,EAAE,IAFE;AAGTP,MAAAA,MAAM,EAAE,UAHC;AAITJ,MAAAA,WAAW,EAAE,EAJJ;AAKTG,MAAAA,WAAW,EAAE,EALJ;AAMTmB,MAAAA,QAAQ,EAAE,EAND;AAOTP,MAAAA,aAAa,EAAE;AAPN,KAAb;AASA,SAAKL,YAAL;AACA,SAAKG,gBAAL;AACH;;AAEDH,EAAAA,YAAY,GAAG;AACXpB,IAAAA,KAAK,CAAC,yEAAD,EAA4E;AAC7EC,MAAAA,MAAM,EAAE,MADqE;AAE7EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,MAAM,EAAE,aADS;AAEjBS,QAAAA,MAAM,EAAEP,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFS;AAGjBC,QAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHE;AAIjBF,QAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJQ;AAKjBE,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD;AALP,OAAf;AAFuE,KAA5E,CAAL,CAUKK,IAVL,CAUUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVjB,EAWKF,IAXL,CAYQG,MAAM,IAAI;AACN,UAAIA,MAAM,CAACc,QAAX,EAAqB;AACjB,aAAKb,QAAL,CAAc;AACVa,UAAAA,QAAQ,EAAEd,MAAM,CAACc;AADP,SAAd;AAGH;AACJ,KAlBT,EAmBQX,KAAK,IAAI;AACL,WAAKF,QAAL,CAAc;AACVE,QAAAA;AADU,OAAd;AAGH,KAvBT;AAyBH;;AAoDDQ,EAAAA,QAAQ,CAACI,GAAD,EAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,GAAxB;AACA,SAAKd,QAAL,CAAc;AACVT,MAAAA,WAAW,EAAEuB;AADH,KAAd;AAGA,SAAKb,YAAL;AACH;;AASDgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKzB,KAAL,CAAWc,aAAX,CAAyBY,GAAzB,CAA6BC,YAAY,iBACtC,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEA,YAA1B;AAAwC,MAAA,IAAI,EAAE,KAAKT,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ,eAQI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWqB,QAAX,CAAoBK,GAApB,CAAwBzB,OAAO,iBAC5B,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAU,MAAA,SAAS,EAAC,2BAApB;AAAgD,MAAA,IAAI,EAAC,GAArD;AAAyD,MAAA,IAAI,EAAC,KAA9D;AACU,MAAA,QAAQ,EAAE,KAAKc,eADzB;AAC0C,MAAA,YAAY,EAAC,kCADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAII;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAA0C,MAAA,OAAO,EAAE,KAAK7B,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CANJ,CARJ,CAFJ,CADJ;AA2BH;;AA1IoD","sourcesContent":["import React from \"react\";\r\nimport \"./MessagePage.css\";\r\nimport MessagePageFriend from \"./MessagePageFriend\";\r\nimport Message from \"./Message\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\n\r\nexport default class MessagePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getRecip = this.getRecip.bind(this);\r\n        this.state = {\r\n            isLoaded: false,\r\n            error: null,\r\n            userid: \"UserName\",\r\n            recipientid: \"\",\r\n            messageText: \"\",\r\n            messages: [],\r\n            conversations: []\r\n        };\r\n        this.loadMessages();\r\n        this.getConversations();\r\n    }\r\n\r\n    loadMessages() {\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/messagecontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"getMessages\",\r\n                userid: sessionStorage.getItem(\"user\"),\r\n                session_token: sessionStorage.getItem(\"token\"),\r\n                user_id: sessionStorage.getItem(\"user\"),\r\n                recipientid: this.state.recipientid\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    if (result.messages) {\r\n                        this.setState({\r\n                            messages: result.messages\r\n                        });\r\n                    }\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/messagecontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"addOrEditMessages\",\r\n                user_id: sessionStorage.getItem(\"user\"),\r\n                session_token: sessionStorage.getItem(\"token\"),\r\n                recipientid: this.state.recipientid,\r\n                message: this.state.messageText,\r\n                userid: sessionStorage.getItem(\"user\")\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    this.setState({\r\n                        //messageText: result.Status\r\n                    });\r\n                    this.loadMessages();\r\n                },\r\n                error => {\r\n                    alert(\"error!\");\r\n                }\r\n            );\r\n    };\r\n\r\n    getConversations = event => {\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/messagecontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"getConversations\",\r\n                userid: sessionStorage.getItem(\"user\")\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    if (result.recipient_ids) {\r\n                        this.setState({\r\n                            conversations: result.recipient_ids\r\n                        });\r\n                    }\r\n                },\r\n                error => {\r\n                    alert(\"error!\");\r\n                }\r\n            );\r\n    };\r\n\r\n    getRecip(evt) {\r\n        console.log(\"REACHED\" + evt);\r\n        this.setState({\r\n            recipientid: evt\r\n        });\r\n        this.loadMessages();\r\n    }\r\n\r\n    myChangeHandler = event => {\r\n        this.setState({\r\n            messageText: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"messagePage-settings\">\r\n                <Navbar/>\r\n                <div className=\"messagePage-main\">\r\n                    <div className=\"messagePage-friends\">\r\n                        {this.state.conversations.map(conversation => (\r\n                            <MessagePageFriend convo={conversation} func={this.getRecip}/>\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"messagePage-messages\">\r\n                        <div className=\"messagePagemessages-messages\">\r\n                            {this.state.messages.map(message => (\r\n                                <Message text={message}/>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"messagePageInput-container\">\r\n                        <textarea className=\"messagePageInput-textArea\" rows=\"4\" cols=\"150\"\r\n                                  onChange={this.myChangeHandler} defaultValue=\"Input your stuff here...........\">\r\n                        </textarea>\r\n                            <button className=\"messagePageInput-send\" onClick={this.submitHandler}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}