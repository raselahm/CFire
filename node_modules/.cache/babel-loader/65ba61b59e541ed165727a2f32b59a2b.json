{"ast":null,"code":"var _jsxFileName = \"/home/sadequs/Code/black-hole-industries/src/Component/PostPreview.js\";\nimport React from \"react\";\nimport \"../Homepage.css\";\n\nclass PostPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.likePost = event => {\n      event.preventDefault();\n      console.log(\"SALJDLFJSDLKFJSDF\" + this.props.post.post_id);\n      fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\n        method: \"post\",\n        body: JSON.stringify({\n          action: \"addOrEditPostTags\",\n          user_id: sessionStorage.getItem(\"user\"),\n          session_token: sessionStorage.getItem(\"token\"),\n          userid: sessionStorage.getItem(\"user\"),\n          tag: \"sample\",\n          postid: this.props.post.post_id\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.Status) {\n          this.loadLikes();\n          this.setState({\n            isLoaded: true\n          });\n        }\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      userLiked: false,\n      usersThatLiked: new Map(),\n      arr: []\n    };\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    console.log(\"ID\" + this.props.post.post_id);\n    fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPostTags\",\n        tag: \"sample\",\n        postid: this.props.post.post_id\n      })\n    }).then(res => res.json()).then(result => {\n      if (result) {\n        console.log(result);\n        this.setState({\n          userLiked: true,\n          arr: result\n        });\n      }\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  // conditionalDisplay() {\n  //     if (this.props.post.parent_id) {\n  //         return \"\";\n  //     } else {\n  //         return (\n  //             <div className=\"comment-block\">\n  //                 <div className=\"comment-indicator\">\n  //                     <div className=\"comment-indicator-text\">\n  //                         {this.getCommentCount()} Comments\n  //                     </div>\n  //                     <img\n  //                         src={require(\"../comment.svg\")}\n  //                         className=\"comment-icon\"\n  //                         onClick={e => this.showModal()}\n  //                         alt=\"View Comments\"\n  //                     />\n  //                 </div>\n  //                 <div className={this.showHideComments()}>\n  //                     <CommentForm\n  //                         onAddComment={this.setCommentCount}\n  //                         parent={this.props.post.post_id}\n  //                         commentCount={this.getCommentCount()}\n  //                     />\n  //                 </div>\n  //             </div>\n  //         );\n  //     }\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"post-preview-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.post.post_text, React.createElement(\"img\", {\n      className: \"like\",\n      src: \"https://i7.uihere.com/icons/998/832/946/upvote-9fbfa83dcbcc4553543fbbcee0c4e206.png\",\n      onClick: this.likePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PostPreview;","map":{"version":3,"sources":["/home/sadequs/Code/black-hole-industries/src/Component/PostPreview.js"],"names":["React","PostPreview","Component","constructor","props","likePost","event","preventDefault","console","log","post","post_id","fetch","method","body","JSON","stringify","action","user_id","sessionStorage","getItem","session_token","userid","tag","postid","then","res","json","result","Status","loadLikes","setState","isLoaded","error","state","userLiked","usersThatLiked","Map","arr","render","post_text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwCnBC,QAxCmB,GAwCRC,KAAK,IAAI;AACZA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsB,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,OAAlD;AACJC,MAAAA,KAAK,CAAC,oEAAD,EAAuE;AACxEC,QAAAA,MAAM,EAAE,MADgE;AAExEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,MAAM,EAAE,mBADS;AAEjBC,UAAAA,OAAO,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAFQ;AAGjBC,UAAAA,aAAa,EAAEF,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAHE;AAIjBE,UAAAA,MAAM,EAAEH,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAJS;AAKjBG,UAAAA,GAAG,EAAE,QALY;AAMjBC,UAAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWM,IAAX,CAAgBC;AANP,SAAf;AAFkE,OAAvE,CAAL,CAWKc,IAXL,CAWUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXjB,EAYKF,IAZL,CAaQG,MAAM,IAAI;AACN,YAAIA,MAAM,CAACC,MAAX,EAAmB;AACf,eAAKC,SAAL;AACA,eAAKC,QAAL,CAAc;AACVC,YAAAA,QAAQ,EAAE;AADA,WAAd;AAIH;AACJ,OArBT,EAsBQC,KAAK,IAAI;AACL,aAAKF,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA;AAFU,SAAd;AAIH,OA3BT;AA6BH,KAxEkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,cAAc,EAAE,IAAIC,GAAJ,EAFP;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAAb;AAKA,SAAKR,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAG;AACRtB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,OAAnC;AACAC,IAAAA,KAAK,CAAC,oEAAD,EAAuE;AACxEC,MAAAA,MAAM,EAAE,MADgE;AAExEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,MAAM,EAAE,aADS;AAEjBM,QAAAA,GAAG,EAAE,QAFY;AAGjBC,QAAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWM,IAAX,CAAgBC;AAHP,OAAf;AAFkE,KAAvE,CAAL,CAQKc,IARL,CAQUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARjB,EASKF,IATL,CAUQG,MAAM,IAAI;AACN,UAAIA,MAAJ,EAAY;AACRpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAZ;AACA,aAAKG,QAAL,CAAc;AACVI,UAAAA,SAAS,EAAE,IADD;AAEVG,UAAAA,GAAG,EAAEV;AAFK,SAAd;AAIH;AACJ,KAlBT,EAmBQK,KAAK,IAAI;AACL,WAAKF,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAxBT;AA0BH;;AAoCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAM,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnC,KAAL,CAAWM,IAAX,CAAgB8B,SADrB,EAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AACK,MAAA,GAAG,EAAC,qFADT;AAEK,MAAA,OAAO,EAAE,KAAKnC,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAWH;;AArHqC;;AAwH1C,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\r\nimport \"../Homepage.css\";\r\n\r\nclass PostPreview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userLiked: false,\r\n            usersThatLiked: new Map(),\r\n            arr: []\r\n        };\r\n        this.loadLikes();\r\n    }\r\n\r\n    loadLikes() {\r\n        console.log(\"ID\" + this.props.post.post_id);\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"getPostTags\",\r\n                tag: \"sample\",\r\n                postid: this.props.post.post_id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    if (result) {\r\n                        console.log(result)\r\n                        this.setState({\r\n                            userLiked: true,\r\n                            arr: result\r\n                        });\r\n                    }\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    };\r\n\r\n    likePost = event => {\r\n            event.preventDefault();\r\n            console.log(\"SALJDLFJSDLKFJSDF\" + this.props.post.post_id);\r\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/ptcontroller.php\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                action: \"addOrEditPostTags\",\r\n                user_id: sessionStorage.getItem(\"user\"),\r\n                session_token: sessionStorage.getItem(\"token\"),\r\n                userid: sessionStorage.getItem(\"user\"),\r\n                tag: \"sample\",\r\n                postid: this.props.post.post_id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    if (result.Status) {\r\n                        this.loadLikes();\r\n                        this.setState({\r\n                            isLoaded: true,\r\n\r\n                        });\r\n                    }\r\n                },\r\n                error => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            );\r\n    };\r\n\r\n    // conditionalDisplay() {\r\n    //     if (this.props.post.parent_id) {\r\n    //         return \"\";\r\n    //     } else {\r\n    //         return (\r\n    //             <div className=\"comment-block\">\r\n    //                 <div className=\"comment-indicator\">\r\n    //                     <div className=\"comment-indicator-text\">\r\n    //                         {this.getCommentCount()} Comments\r\n    //                     </div>\r\n    //                     <img\r\n    //                         src={require(\"../comment.svg\")}\r\n    //                         className=\"comment-icon\"\r\n    //                         onClick={e => this.showModal()}\r\n    //                         alt=\"View Comments\"\r\n    //                     />\r\n    //                 </div>\r\n    //                 <div className={this.showHideComments()}>\r\n    //                     <CommentForm\r\n    //                         onAddComment={this.setCommentCount}\r\n    //                         parent={this.props.post.post_id}\r\n    //                         commentCount={this.getCommentCount()}\r\n    //                     />\r\n    //                 </div>\r\n    //             </div>\r\n    //         );\r\n    //     }\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post-preview-main\">\r\n                {this.props.post.post_text}\r\n                <img className=\"like\"\r\n                     src=\"https://i7.uihere.com/icons/998/832/946/upvote-9fbfa83dcbcc4553543fbbcee0c4e206.png\"\r\n                     onClick={this.likePost}/>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostPreview;\r\n"]},"metadata":{},"sourceType":"module"}