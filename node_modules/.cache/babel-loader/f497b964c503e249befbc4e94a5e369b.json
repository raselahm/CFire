{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\sprint-4\\\\src\\\\Component\\\\Login-Register\\\\Registration.js\";\nimport React, { Component } from 'react';\nimport './LoginPage.css'; // import Form from '../Component/registerForm'\n\nimport logo from '../../Resources/CFire.jpg';\nimport Modal from './Modal';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = fields => {\n      console.log(\"App Component recieved, \", fields);\n      this.setState({\n        email: sessionStorage.getItem(\"email\"),\n        password: sessionStorage.getItem(\"password\")\n      });\n      toggleModal(this);\n    };\n\n    this.state = {\n      openModal: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RegisterForm, {\n      onSubmit: fields => this.onSubmit(fields),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"logo\",\n      src: logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"greeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Welcome to CFire!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.openModal,\n      onClose: e => toggleModal(this),\n      email: this.state.email,\n      password: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction toggleModal(app) {\n  app.setState({\n    openModal: !app.state.openModal\n  });\n}\n\nclass RegisterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      matchError: \"\",\n      modalOpen: \"\"\n    };\n\n    this.change = e => {\n      this.setState({\n        // change function used to change the state of the Component\n        [e.target.name]: e.target.value\n      }); // Study this syntax for JS/JSX\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      let passwordError = \"\";\n      let usernameError = \"\";\n      let matchError = \"\";\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'invalid email';\n      }\n\n      if (this.state.FNError === \"\") {\n        passwordError = 'cannot leave password blank';\n      }\n\n      if (this.state.password === \"\") {\n        usernameError = 'cannot leave username blank';\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        matchError = 'Passwords do not match';\n      }\n\n      if (emailError || passwordError || usernameError || matchError) {\n        this.setState({\n          emailError\n        }); // this.setState({passwordError});\n\n        this.setState({\n          usernameError\n        });\n        this.setState({\n          matchError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const isvalid = this.validate();\n      this.props.onSubmit(this.state);\n\n      if (isvalid) {\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/SocialAuth.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"register\",\n            email_addr: this.state.email\n          })\n        }).then(res => res.json()).then();\n        sessionStorage.setItem(\"email\", this.state.email);\n        sessionStorage.setItem(\"password\", this.state.password);\n        this.setState({\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          usernameError: \"\",\n          emailError: \"\",\n          passwordError: \"\",\n          matchError: \"\"\n        });\n      }\n\n      this.setState({\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    };\n  }\n\n  render() {\n    // Render function is what will get shown onto the screen \n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"loginInput\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: e => this.change(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"loginInput\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: e => this.change(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"loginInput\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      onChange: e => this.change(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, this.state.matchError), /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.onSubmit,\n      className: \"buttons\",\n      value: \"Register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/School/sprint-4/src/Component/Login-Register/Registration.js"],"names":["React","Component","logo","Modal","BrowserRouter","Router","Route","Link","Registration","constructor","props","onSubmit","fields","console","log","setState","email","sessionStorage","getItem","password","toggleModal","state","openModal","render","e","app","RegisterForm","confirmPassword","usernameError","emailError","passwordError","matchError","modalOpen","change","target","name","value","validate","includes","FNError","preventDefault","isvalid","fetch","method","body","JSON","stringify","action","email_addr","then","res","json","setItem","firstName","lastName","username","fontSize","color"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './LoginPage.css';\r\n// import Form from '../Component/registerForm'\r\nimport logo from '../../Resources/CFire.jpg'\r\nimport Modal from './Modal'\r\nimport {\r\n  BrowserRouter as Router, \r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\n\r\nexport default class Registration extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openModal: false,\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n\r\n  onSubmit = fields => {\r\n    console.log(\"App Component recieved, \", fields);\r\n\r\n    this.setState({\r\n      email: sessionStorage.getItem(\"email\"),\r\n      password: sessionStorage.getItem(\"password\")\r\n    })\r\n    \r\n    toggleModal(this);\r\n  }\r\n  render(){\r\n    return (\r\n      <div className = \"App\">        \r\n                     \r\n\r\n        <RegisterForm onSubmit={fields => this.onSubmit(fields)}/>\r\n        <span className = \"divider\"/>      \r\n        <img className = \"logo\" src= {logo} alt=\"logo\" />\r\n        <span className = \"greeting\">Welcome to CFire!</span>\r\n        <div>\r\n        </div>\r\n        <Modal show={this.state.openModal} onClose={e => toggleModal(this)}\r\n        email = {this.state.email} password = {this.state.password}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\n\r\nfunction toggleModal(app) {\r\n  app.setState({\r\n    openModal: !app.state.openModal\r\n  });\r\n}\r\n\r\nclass RegisterForm extends React.Component{ //Create Component that will house your login form\r\n  state = {\r\n      \r\n      email: \"\", \r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      usernameError: \"\",\r\n      emailError: \"\", \r\n      passwordError: \"\",\r\n      matchError: \"\", \r\n      modalOpen: \"\"\r\n  };\r\n\r\n  change = (e) => {\r\n      this.setState({         // change function used to change the state of the Component\r\n          [e.target.name]:    \r\n          e.target.value});    // Study this syntax for JS/JSX\r\n  };\r\n\r\n\r\n  validate = () => {\r\n      let emailError = \"\"; \r\n      let passwordError = \"\";\r\n      let usernameError = \"\";\r\n      let matchError = \"\" ;\r\n\r\n\r\n      if(!this.state.email.includes('@')){\r\n          emailError = 'invalid email';\r\n      }\r\n      \r\n      \r\n      if(this.state.FNError === \"\"){\r\n          passwordError = 'cannot leave password blank';\r\n      }\r\n      \r\n\r\n      if(this.state.password === \"\"){\r\n          usernameError = 'cannot leave username blank';\r\n      }\r\n\r\n\r\n      if(this.state.password !== this.state.confirmPassword){\r\n          matchError = 'Passwords do not match'\r\n      }\r\n\r\n\r\n      if(emailError || passwordError || usernameError || matchError){\r\n          this.setState({emailError});\r\n          // this.setState({passwordError});\r\n          this.setState({usernameError});\r\n          this.setState({matchError});\r\n          return false;\r\n      }\r\n\r\n     return true;\r\n\r\n  }\r\n\r\n \r\n\r\n// Options. No route tag.... withRouter() function\r\n\r\n\r\n  onSubmit = e =>{\r\n      e.preventDefault();\r\n\r\n      const isvalid = this.validate();\r\n\r\n\r\n      this.props.onSubmit(this.state)\r\n\r\n      if(isvalid){\r\n\r\n          fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/SocialAuth.php\",{\r\n              method: \"post\",\r\n              body: JSON.stringify({\r\n                  action: \"register\",\r\n                  email_addr: this.state.email\r\n              })\r\n          })\r\n          .then(res => res.json())\r\n          .then(\r\n\r\n          );\r\n\r\n\r\n          sessionStorage.setItem(\"email\", this.state.email);\r\n          sessionStorage.setItem(\"password\", this.state.password);\r\n\r\n\r\n          this.setState({\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              username: \"\",\r\n              email: \"\", \r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n              usernameError: \"\",\r\n              emailError: \"\", \r\n              passwordError: \"\",\r\n              matchError: \"\"\r\n          })\r\n          \r\n      }\r\n\r\n      this.setState({\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          username: \"\",\r\n          email: \"\", \r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          }\r\n      );\r\n  }\r\n\r\n  render(){       // Render function is what will get shown onto the screen \r\n     return( \r\n     <form className = \"loginForm\">\r\n           \r\n          \r\n          <input type = \"email\"\r\n          className = \"loginInput\"\r\n          name = \"email\"\r\n          placeholder = \"Email\" \r\n          value = {this.state.email}\r\n          onChange = {e => this.change(e)}\r\n          required\r\n          />\r\n          <br/>\r\n          <div style = {{fontSize:8, color: \"red\"}}>\r\n             {this.state.emailError}\r\n          </div>\r\n          <input \r\n          className = \"loginInput\"\r\n          name = \"password\" \r\n          type = \"password\"\r\n          placeholder = \"Password\"\r\n          value = {this.state.password}\r\n          onChange  = {e => this.change(e)}\r\n          required\r\n          />\r\n          <br/>\r\n          <div style = {{fontSize:8, color: \"red\"}}>\r\n             {this.state.passwordError}\r\n          </div>\r\n          <input \r\n          className = \"loginInput\"\r\n          name = \"confirmPassword\" \r\n          type = \"password\"\r\n          placeholder = \"Confirm Password\"\r\n          value = {this.state.confirmPassword}\r\n          onChange  = {e => this.change(e)}\r\n          required\r\n          />\r\n          <br/>\r\n          <div style = {{fontSize:8, color:  \"red\"}}>\r\n             {this.state.matchError} \r\n          </div>\r\n          <input  \r\n          onClick = {this.onSubmit}\r\n          className = \"buttons\" \r\n          value = \"Register\"/>\r\n          \r\n         \r\n      </form>\r\n     );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}