{"ast":null,"code":"var _jsxFileName = \"/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/Post.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport CommentForm from \"./CommentForm.js\";\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = e => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.setCommentCount = newcount => {\n      this.setState({\n        comments: newcount\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag\n    };\n    this.post = React.createRef();\n  }\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n\n    return parseInt(this.state.comments);\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n\n    return \"comments hide\";\n  }\n\n  conditionalDisplay() {\n    console.log(\"Parent is \" + this.props.post.parent_id);\n\n    if (this.props.post.parent_id) {\n      return \"\";\n    } else {\n      return React.createElement(\"div\", {\n        className: \"comment-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-indicator-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.getCommentCount(), \" Comments\"), React.createElement(\"img\", {\n        src: require(\"../comment.svg\"),\n        className: \"comment-icon\",\n        onClick: e => this.showModal(),\n        alt: \"View Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.showHideComments(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(CommentForm, {\n        onAddComment: this.setCommentCount,\n        parent: this.props.post.post_id,\n        commentCount: this.getCommentCount(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      key: this.props.post.post_id,\n      className: [this.props.type, \"postbody\"].join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.post.name, \" \", this.props.post.timestamp, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \" \", this.props.post.post_text, this.conditionalDisplay());\n  }\n\n}","map":{"version":3,"sources":["/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/Post.js"],"names":["React","CommentForm","Post","Component","constructor","props","showModal","e","setState","state","setCommentCount","newcount","comments","post","comment_flag","createRef","getCommentCount","parseInt","showHideComments","conditionalDisplay","console","log","parent_id","require","post_id","render","type","join","name","timestamp","post_text"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport CommentForm from \"./CommentForm.js\";\n\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      comments: this.props.post.comment_flag\n    };\n    this.post = React.createRef();\n  }\n\n  showModal = e => {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  };\n\n  setCommentCount = newcount => {\n    this.setState({\n      comments: newcount\n    });\n  };\n\n  getCommentCount() {\n    if (!this.state.comments || this.state.comments === \"0\") {\n      return 0;\n    }\n    return parseInt(this.state.comments);\n  }\n\n  showHideComments() {\n    if (this.state.showModal) {\n      return \"comments show\";\n    }\n    return \"comments hide\";\n  }\n\n  conditionalDisplay() {\n    console.log(\"Parent is \" + this.props.post.parent_id);\n    if (this.props.post.parent_id) {\n      return \"\";\n    } else {\n      return (\n        <div className=\"comment-block\">\n          <div className=\"comment-indicator\">\n            <div className=\"comment-indicator-text\">\n              {this.getCommentCount()} Comments\n            </div>\n            <img\n              src={require(\"../comment.svg\")}\n              className=\"comment-icon\"\n              onClick={e => this.showModal()}\n              alt=\"View Comments\"\n            />\n          </div>\n          <div className={this.showHideComments()}>\n            <CommentForm\n              onAddComment={this.setCommentCount}\n              parent={this.props.post.post_id}\n              commentCount={this.getCommentCount()}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div\n        key={this.props.post.post_id}\n        className={[this.props.type, \"postbody\"].join(\" \")}\n      >\n        {this.props.post.name} {this.props.post.timestamp} <br />{\" \"}\n        {this.props.post.post_text}\n        {this.conditionalDisplay()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}