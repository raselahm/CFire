{"ast":null,"code":"var _jsxFileName = \"/home/sadequs/Code/black-hole-industries/src/Pages/Registration.js\";\nimport React, { Component } from 'react';\nimport './LoginPage.css'; // import Form from '../Component/registerForm'\n\nimport logo from '../Resources/CFire.jpg';\nimport Modal from '../Component/Modal';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = fields => {\n      console.log(\"App Component recieved, \", fields);\n      this.setState({\n        email: sessionStorage.getItem(\"email\"),\n        password: sessionStorage.getItem(\"password\")\n      });\n      toggleModal(this);\n    };\n\n    this.state = {\n      openModal: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(RegisterForm, {\n      onSubmit: fields => this.onSubmit(fields),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"logo\",\n      src: logo,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"greeting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Welcome to CFire!\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.state.openModal,\n      onClose: e => toggleModal(this),\n      email: this.state.email,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction toggleModal(app) {\n  app.setState({\n    openModal: !app.state.openModal\n  });\n}\n\nclass RegisterForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      usernameError: \"\",\n      emailError: \"\",\n      passwordError: \"\",\n      matchError: \"\",\n      modalOpen: \"\"\n    };\n\n    this.change = e => {\n      this.setState({\n        // change function used to change the state of the Component\n        [e.target.name]: e.target.value\n      }); // Study this syntax for JS/JSX\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      let passwordError = \"\";\n      let usernameError = \"\";\n      let matchError = \"\";\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'invalid email';\n      }\n\n      if (this.state.FNError === \"\") {\n        passwordError = 'cannot leave password blank';\n      }\n\n      if (this.state.password === \"\") {\n        usernameError = 'cannot leave username blank';\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        matchError = 'Passwords do not match';\n      }\n\n      if (emailError || passwordError || usernameError || matchError) {\n        this.setState({\n          emailError\n        }); // this.setState({passwordError});\n\n        this.setState({\n          usernameError\n        });\n        this.setState({\n          matchError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const isvalid = this.validate();\n      this.props.onSubmit(this.state);\n\n      if (isvalid) {\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/SocialAuth.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"register\",\n            email_addr: this.state.email\n          })\n        }).then(res => res.json()).then();\n        sessionStorage.setItem(\"email\", this.state.email);\n        sessionStorage.setItem(\"password\", this.state.password);\n        this.setState({\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          usernameError: \"\",\n          emailError: \"\",\n          passwordError: \"\",\n          matchError: \"\"\n        });\n      }\n\n      this.setState({\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    };\n  }\n\n  render() {\n    // Render function is what will get shown onto the screen \n    return React.createElement(\"form\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"loginInput\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      value: this.state.firstName // onChange function allows you to change the state of the component\n      // Similar to lambda function in java for syntax\n      ,\n      onChange: e => this.change(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"loginInput\",\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      value: this.state.lastName // onChange function allows you to change the state of the component\n      // Similar to lambda function in java for syntax\n      ,\n      onChange: e => this.change(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"loginInput\",\n      name: \"username\",\n      placeholder: \"Username\",\n      value: this.state.username // onChange function allows you to change the state of the component\n      // Similar to lambda function in java for syntax\n      ,\n      onChange: e => this.change(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.state.usernameError), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"loginInput\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: e => this.change(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.state.emailError), React.createElement(\"input\", {\n      className: \"loginInput\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: e => this.change(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.passwordError), React.createElement(\"input\", {\n      className: \"loginInput\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      onChange: e => this.change(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 8,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.matchError), React.createElement(\"input\", {\n      onClick: this.onSubmit,\n      className: \"buttons\",\n      value: \"Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/sadequs/Code/black-hole-industries/src/Pages/Registration.js"],"names":["React","Component","logo","Modal","BrowserRouter","Router","Route","Link","Registration","constructor","props","onSubmit","fields","console","log","setState","email","sessionStorage","getItem","password","toggleModal","state","openModal","render","e","app","RegisterForm","firstName","lastName","username","confirmPassword","usernameError","emailError","passwordError","matchError","modalOpen","change","target","name","value","validate","includes","FNError","preventDefault","isvalid","fetch","method","body","JSON","stringify","action","email_addr","then","res","json","setItem","fontSize","color"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './LoginPage.css';\n// import Form from '../Component/registerForm'\nimport logo from '../Resources/CFire.jpg'\nimport Modal from '../Component/Modal'\nimport {\n  BrowserRouter as Router, \n  Route,\n  Link\n} from 'react-router-dom';\n\n\nexport default class Registration extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      openModal: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n\n  onSubmit = fields => {\n    console.log(\"App Component recieved, \", fields);\n\n    this.setState({\n      email: sessionStorage.getItem(\"email\"),\n      password: sessionStorage.getItem(\"password\")\n    })\n    \n    toggleModal(this);\n  }\n  render(){\n    return (\n      <div className = \"App\">        \n                     \n\n        <RegisterForm onSubmit={fields => this.onSubmit(fields)}/>\n        <span className = \"divider\"/>      \n        <img className = \"logo\" src= {logo} alt=\"logo\" />\n        <span className = \"greeting\">Welcome to CFire!</span>\n        <div>\n        </div>\n        <Modal show={this.state.openModal} onClose={e => toggleModal(this)}\n        email = {this.state.email} password = {this.state.password}/>\n      </div>\n    );\n  }\n\n  \n}\n\n\n\nfunction toggleModal(app) {\n  app.setState({\n    openModal: !app.state.openModal\n  });\n}\n\nclass RegisterForm extends React.Component{ //Create Component that will house your login form\n  state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      email: \"\", \n      password: \"\",\n      confirmPassword: \"\",\n      usernameError: \"\",\n      emailError: \"\", \n      passwordError: \"\",\n      matchError: \"\", \n      modalOpen: \"\"\n  };\n\n  change = (e) => {\n      this.setState({         // change function used to change the state of the Component\n          [e.target.name]:    \n          e.target.value});    // Study this syntax for JS/JSX\n  };\n\n\n  validate = () => {\n      let emailError = \"\"; \n      let passwordError = \"\";\n      let usernameError = \"\";\n      let matchError = \"\" ;\n\n\n      if(!this.state.email.includes('@')){\n          emailError = 'invalid email';\n      }\n      \n      \n      if(this.state.FNError === \"\"){\n          passwordError = 'cannot leave password blank';\n      }\n      \n\n      if(this.state.password === \"\"){\n          usernameError = 'cannot leave username blank';\n      }\n\n\n      if(this.state.password !== this.state.confirmPassword){\n          matchError = 'Passwords do not match'\n      }\n\n\n      if(emailError || passwordError || usernameError || matchError){\n          this.setState({emailError});\n          // this.setState({passwordError});\n          this.setState({usernameError});\n          this.setState({matchError});\n          return false;\n      }\n\n     return true;\n\n  }\n\n \n\n// Options. No route tag.... withRouter() function\n\n\n  onSubmit = e =>{\n      e.preventDefault();\n\n      const isvalid = this.validate();\n\n\n      this.props.onSubmit(this.state)\n\n      if(isvalid){\n\n          fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/SocialAuth.php\",{\n              method: \"post\",\n              body: JSON.stringify({\n                  action: \"register\",\n                  email_addr: this.state.email\n              })\n          })\n          .then(res => res.json())\n          .then(\n\n          );\n\n\n          sessionStorage.setItem(\"email\", this.state.email);\n          sessionStorage.setItem(\"password\", this.state.password);\n\n\n          this.setState({\n              firstName: \"\",\n              lastName: \"\",\n              username: \"\",\n              email: \"\", \n              password: \"\",\n              confirmPassword: \"\",\n              usernameError: \"\",\n              emailError: \"\", \n              passwordError: \"\",\n              matchError: \"\"\n          })\n          \n      }\n\n      this.setState({\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          email: \"\", \n          password: \"\",\n          confirmPassword: \"\",\n          }\n      );\n  }\n\n  render(){       // Render function is what will get shown onto the screen \n     return( \n     <form className = \"loginForm\">\n           \n          <input \n          className = \"loginInput\"\n          name = \"firstName\"\n          placeholder = \"First Name\" \n          value = {this.state.firstName}\n          // onChange function allows you to change the state of the component\n          // Similar to lambda function in java for syntax\n          onChange = {e => this.change(e)}\n          required\n          /> \n          <br/>\n          <input \n          className = \"loginInput\"\n          name = \"lastName\"\n          placeholder = \"Last Name\" \n          value = {this.state.lastName}\n          // onChange function allows you to change the state of the component\n          // Similar to lambda function in java for syntax\n          onChange = {e => this.change(e)}\n          required\n          /> \n          <br/>\n          <input type = \"text\"\n          className = \"loginInput\"\n          name = \"username\"\n          placeholder = \"Username\" \n          value = {this.state.username}\n          // onChange function allows you to change the state of the component\n          // Similar to lambda function in java for syntax\n          onChange = {e => this.change(e)}\n          required\n          /> \n          <br/>\n          <div style = {{fontSize:8, color: \"red\"}}>\n             {this.state.usernameError}\n          </div>\n          <input type = \"email\"\n          className = \"loginInput\"\n          name = \"email\"\n          placeholder = \"Email\" \n          value = {this.state.email}\n          onChange = {e => this.change(e)}\n          required\n          />\n          <br/>\n          <div style = {{fontSize:8, color: \"red\"}}>\n             {this.state.emailError}\n          </div>\n          <input \n          className = \"loginInput\"\n          name = \"password\" \n          type = \"password\"\n          placeholder = \"Password\"\n          value = {this.state.password}\n          onChange  = {e => this.change(e)}\n          required\n          />\n          <br/>\n          <div style = {{fontSize:8, color: \"red\"}}>\n             {this.state.passwordError}\n          </div>\n          <input \n          className = \"loginInput\"\n          name = \"confirmPassword\" \n          type = \"password\"\n          placeholder = \"Confirm Password\"\n          value = {this.state.confirmPassword}\n          onChange  = {e => this.change(e)}\n          required\n          />\n          <br/>\n          <div style = {{fontSize:8, color:  \"red\"}}>\n             {this.state.matchError} \n          </div>\n          <input  \n          onClick = {this.onSubmit}\n          className = \"buttons\" \n          value = \"Register\"/>\n          \n         \n      </form>\n     );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}