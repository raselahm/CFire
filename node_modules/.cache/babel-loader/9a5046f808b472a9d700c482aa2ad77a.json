{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Documents/GitHub/black-hole-industries/src/Component/LoginForm.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport '../Pages/LoginPage.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change = e => {\n      this.setState({\n        // change function used to change the state of the Component\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validate = () => {\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'invalid email';\n      }\n\n      if (this.state.email.length === \"\") {\n        emailError = 'cannot leave blank';\n      }\n\n      if (this.state.password === \"\") {\n        passwordError = 'cannot leave password blank';\n      }\n\n      if (emailError || passwordError) {\n        this.setState({\n          emailError\n        });\n        this.setState({\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitHandler = event => {\n      //keep the form from actually submitting\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        //make the api call to the authentication page\n        fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/SocialAuth.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"login\",\n            username: this.state.email,\n            password: this.state.password\n          })\n        }).then(res => res.json()).then(result => {\n          console.log(\"Testing\");\n\n          if (result.user) {\n            sessionStorage.setItem(\"token\", result.user.session_token);\n            sessionStorage.setItem(\"user\", result.user.user_id);\n            sessionStorage.setItem(\"username\", this.state.email);\n            this.setState({\n              sessiontoken: result.user.session_token,\n              alanmessage: result.user.session_token\n            });\n            this.props.history.push('/Homepage');\n          } else {\n            sessionStorage.removeItem(\"token\");\n            sessionStorage.removeItem(\"user\");\n            this.setState({\n              sessiontoken: \"\",\n              alanmessage: result.message\n            });\n          }\n        }, error => {\n          alert(\"error!\");\n        });\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      alanmessage: \"\",\n      sessiontoken: \"\"\n    };\n  }\n\n  render() {\n    //   if (!sessionStorage.getItem(\"token\")) {\n    console.log(\"Rendering login, token is \" + sessionStorage.getItem(\"token\"));\n    return React.createElement(\"form\", {\n      className: \"loginForm\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"loginInput\",\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"loginInput\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"buttons\",\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.alanmessage), React.createElement(Link, {\n      to: \"../Registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Register\"))); //   } else {\n    //     console.log(\"Returning welcome message\");\n    //       return(\n    //           <div>\n    //           <p>{this.state.alanmessage} </p>\n    //           <Link to = '../Homepage'><button className = \"buttons\">Homepage</button></Link>\n    //         </div>\n    //         );\n    //   }\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/jay/Documents/GitHub/black-hole-industries/src/Component/LoginForm.js"],"names":["React","Link","withRouter","LoginForm","Component","constructor","props","change","e","setState","target","name","value","validate","emailError","passwordError","state","email","includes","length","password","submitHandler","event","preventDefault","isValid","fetch","method","body","JSON","stringify","action","username","then","res","json","result","console","log","user","sessionStorage","setItem","session_token","user_id","sessiontoken","alanmessage","history","push","removeItem","message","error","alert","render","getItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport '../Pages/LoginPage.css'\n\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      alanmessage: \"\",\n      sessiontoken: \"\"\n    };\n  }\n\n  change = e => {\n    this.setState({         // change function used to change the state of the Component\n      [e.target.name]:    \n      e.target.value});\n  };\n\n  validate = () => {\n    let emailError = \"\"; \n    let passwordError = \"\";\n\n\n    if(!this.state.email.includes('@')){\n        emailError = 'invalid email';\n    }\n\n    if(this.state.email.length === \"\"){\n       emailError = 'cannot leave blank'; \n    }\n    \n    \n    if(this.state.password === \"\"){\n        passwordError = 'cannot leave password blank';\n    }\n    \n\n    if(emailError || passwordError){\n        this.setState({emailError});\n        this.setState({passwordError});\n        return false;\n    }\n\n   return true;\n\n}\n  \n\n\n  submitHandler = event => {\n    //keep the form from actually submitting\n    event.preventDefault();\n\n    const isValid = this.validate();\n\n    if(isValid){\n      //make the api call to the authentication page\n      fetch(\"http://stark.cse.buffalo.edu/cse410/blackhole/api/SocialAuth.php\", {\n          method: \"post\",\n          body: JSON.stringify({\n            action: \"login\",\n            username: this.state.email,\n            password: this.state.password\n          })\n        })\n        .then(res => res.json())\n        .then(\n          result => {\n            console.log(\"Testing\");\n            if (result.user) {\n              sessionStorage.setItem(\"token\", result.user.session_token);\n              sessionStorage.setItem(\"user\", result.user.user_id);\n              sessionStorage.setItem(\"username\", this.state.email);\n\n              this.setState({\n                sessiontoken: result.user.session_token,\n                alanmessage: result.user.session_token\n              });\n              this.props.history.push('/Homepage');\n            } else {\n              sessionStorage.removeItem(\"token\");\n              sessionStorage.removeItem(\"user\");\n              this.setState({\n                sessiontoken: \"\",\n                alanmessage: result.message\n              });\n            }\n\n          },\n          error => {\n            alert(\"error!\");\n          }\n        );\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n    }\n  };\n\n  render() {\n  //   if (!sessionStorage.getItem(\"token\")) {\n    console.log(\"Rendering login, token is \" + sessionStorage.getItem(\"token\"));\n    \n      return (\n        <form className = \"loginForm\" onSubmit={this.submitHandler}>\n          \n            <input className = \"loginInput\"\n            type=\"text\" \n            name = \"email\"\n            placeholder = \"Email\"\n            onChange={this.change} \n            required\n            />\n          <br />\n            <input className = \"loginInput\"\n            type=\"password\" \n            name = \"password\"\n            placeholder = \"Password\"\n            onChange={this.change} \n            required\n            />\n          <input className = \"buttons\" type=\"submit\" value=\"Login\"/>\n          <p>{this.state.alanmessage}</p>\n          <Link to = '../Registration'><button className = \"buttons\">Register</button></Link>\n        </form>\n      );\n  //   } else {\n  //     console.log(\"Returning welcome message\");\n\n  //       return(\n  //           <div>\n  //           <p>{this.state.alanmessage} </p>\n  //           <Link to = '../Homepage'><button className = \"buttons\">Homepage</button></Link>\n  //         </div>\n  //         );\n      \n  //   }\n  }\n}\n\nexport default withRouter(LoginForm)"]},"metadata":{},"sourceType":"module"}