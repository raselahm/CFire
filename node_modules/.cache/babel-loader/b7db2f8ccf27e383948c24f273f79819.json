{"ast":null,"code":"var _jsxFileName = \"/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/PostingList.js\";\nimport React from \"react\";\nimport Post from \"./Post.js\";\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      listType: props.listType\n    };\n  }\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  loadPosts() {\n    fetch(\"http://stark.cse.buffalo.edu/hci/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        max_posts: \"10\",\n        parentid: this.props.parentid\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.posts) {\n        this.setState({\n          isLoaded: true,\n          posts: result.posts\n        });\n      }\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    //this.loadPosts();\n    const {\n      error,\n      isLoaded,\n      posts\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" Error: \", error.message, \" \");\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Loading... \");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, posts.map(post => React.createElement(Post, {\n        key: post.post_id,\n        post: post,\n        type: this.props.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/waseehaque/Codes/CS Projects/black-hole-industries/src/Component/PostingList.js"],"names":["React","Post","PostingList","Component","constructor","props","state","error","isLoaded","posts","listType","componentDidMount","loadPosts","fetch","method","body","JSON","stringify","action","max_posts","parentid","then","res","json","result","setState","render","message","map","post","post_id","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAEL,KAAK,CAACK;AAJL,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AACVC,IAAAA,KAAK,CAAC,qDAAD,EAAwD;AAC3DC,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,MAAM,EAAE,UADW;AAEnBC,QAAAA,SAAS,EAAE,IAFQ;AAGnBC,QAAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWe;AAHF,OAAf;AAFqD,KAAxD,CAAL,CAQGC,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EASGF,IATH,CAUIG,MAAM,IAAI;AACR,UAAIA,MAAM,CAACf,KAAX,EAAkB;AAChB,aAAKgB,QAAL,CAAc;AACZjB,UAAAA,QAAQ,EAAE,IADE;AAGZC,UAAAA,KAAK,EAAEe,MAAM,CAACf;AAHF,SAAd;AAKD;AACF,KAlBL,EAmBIF,KAAK,IAAI;AACP,WAAKkB,QAAL,CAAc;AACZjB,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAxBL;AA0BD;;AAEDmB,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAACnB,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKH,KAAtC;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcA,KAAK,CAACoB,OAApB,MAAP;AACD,KAFD,MAEO,IAAI,CAACnB,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,KAFM,MAEA;AACL,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KAAK,CAACmB,GAAN,CAAUC,IAAI,IACb,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC,OAAhB;AAAyB,QAAA,IAAI,EAAED,IAA/B;AAAqC,QAAA,IAAI,EAAE,KAAKxB,KAAL,CAAW0B,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD;AACF;;AA5DsD","sourcesContent":["import React from \"react\";\nimport Post from \"./Post.js\";\n\nexport default class PostingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: [],\n      listType: props.listType\n    };\n  }\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  loadPosts() {\n    fetch(\"http://stark.cse.buffalo.edu/hci/postcontroller.php\", {\n      method: \"post\",\n      body: JSON.stringify({\n        action: \"getPosts\",\n        max_posts: \"10\",\n        parentid: this.props.parentid\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          if (result.posts) {\n            this.setState({\n              isLoaded: true,\n\n              posts: result.posts\n            });\n          }\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    //this.loadPosts();\n    const {error, isLoaded, posts} = this.state;\n    if (error) {\n      return <div> Error: {error.message} </div>;\n    } else if (!isLoaded) {\n      return <div> Loading... </div>;\n    } else {\n      return (\n        <div className=\"posts\">\n          {posts.map(post => (\n            <Post key={post.post_id} post={post} type={this.props.type} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}